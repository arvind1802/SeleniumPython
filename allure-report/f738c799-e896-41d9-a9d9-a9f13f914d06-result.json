{"name": "Adding New Customer into the Porta", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//strong[contains(text(),'Voice & Communication')]\"}\n  (Session info: chrome=96.0.4664.110)", "trace": "self = <tests.test_addcustomer.Test_AddCustomer object at 0x000001B04B27C130>\ngetData = {'Company Name': 'Auto_Client_0231', 'Contact Email': 'test@gmail.com', 'Contact Name': 'Test', 'Contact Number': '27623006666', ...}\n\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.description(\"\"\"Verifying the add customer Scenario.\"\"\")\n    @allure.story('epic_1')\n    @allure.title(\"Adding New Customer into the Porta\")\n    @allure.step\n    def test_addcust(self, getData):\n        wait = WebDriverWait(self.driver, 50)\n        log = self.getLogger()\n        actions = Actions(self.driver)\n        homePage = HomePage(self.driver)\n        #time.sleep(50)\n        wait.until(EC.visibility_of_element_located(homePage.myservices))\n        servicePage = homePage.getServicesIcon()\n        time.sleep(20)\n        actions.click(servicePage.servicesPagedropdown())\n        log.info(\"Clicked on Service Page DropDown\")\n        actions.click(servicePage.selectaccount())\n        log.info(\"Selected Account\")\n>       wait.until(EC.visibility_of_element_located(servicePage.voicecommone()))\n\ntests\\test_addcustomer.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObjects\\ServicesPage.py:26: in voicecommone\n    return self.driver.find_element(*ServicesPage.voiceandcomm)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:976: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001B04C0BD370>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x76FD75F4+228]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x76FD75C4+180]\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//strong[contains(text(),'Voice & Communication')]\"}\nE         (Session info: chrome=96.0.4664.110)\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: NoSuchElementException"}, "description": "Verifying the add customer Scenario.", "steps": [{"name": "test_addcust", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//strong[contains(text(),'Voice & Communication')]\"}\n  (Session info: chrome=96.0.4664.110)\n\n", "trace": "  File \"C:\\Selenium\\Selenium-Python-Framework\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Selenium\\Selenium-Python-Framework\\tests\\test_addcustomer.py\", line 31, in test_addcust\n    wait.until(EC.visibility_of_element_located(servicePage.voicecommone()))\n  File \"C:\\Selenium\\Selenium-Python-Framework\\pageObjects\\ServicesPage.py\", line 26, in voicecommone\n    return self.driver.find_element(*ServicesPage.voiceandcomm)\n  File \"C:\\Selenium\\Selenium-Python-Framework\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 976, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n  File \"C:\\Selenium\\Selenium-Python-Framework\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Selenium\\Selenium-Python-Framework\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "getData", "value": "{'Company Name': 'Auto_Client_0231', 'UpdatedCompanyName': None, 'Credit Limit': 10, 'Contact Name': 'Test', 'Contact Number': '27623006666', 'Contact Email': 'test@gmail.com'}"}], "start": 1639669403186, "stop": 1639669428402}], "attachments": [{"name": "Screenshot", "source": "67ae0605-ea64-4a65-ba87-84a30905ffdb-attachment.png", "type": "image/png"}, {"name": "log", "source": "6a82bfd2-5f20-438b-bb83-3ce0eba4c515-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "a9f9dbfe-49da-4939-8eb2-f559321f8830-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "getData", "value": "{'Company Name': 'Auto_Client_0231', 'UpdatedCompanyName': None, 'Credit Limit': 10, 'Contact Name': 'Test', 'Contact Number': '27623006666', 'Contact Email': 'test@gmail.com'}"}], "start": 1639669403186, "stop": 1639669428406, "uuid": "76bdd7d1-249c-4229-9feb-213fada68e7a", "historyId": "33a05123a6aaf28487040ee2da07dc3b", "testCaseId": "7ad8bb180455c3005ef413273448f05b", "fullName": "tests.test_addcustomer.Test_AddCustomer#test_addcust", "labels": [{"name": "severity", "value": "critical"}, {"name": "story", "value": "epic_1"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_addcustomer"}, {"name": "subSuite", "value": "Test_AddCustomer"}, {"name": "host", "value": "ARVINDNAGPURE"}, {"name": "thread", "value": "9228-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_addcustomer"}]}