{"name": "Adding New Customer into the Porta", "status": "broken", "statusDetails": {"message": "TypeError: selenium.webdriver.remote.webdriver.WebDriver.find_element() argument after * must be an iterable, not WebElement", "trace": "self = <tests.test_addcustomer.Test_AddCustomer object at 0x0000018EE9B53F10>\ngetData = {'Company Name': 'Auto_Client_0231', 'Contact Email': 'test@gmail.com', 'Contact Name': 'Test', 'Contact Number': '27623006666', ...}\n\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.description(\"\"\"Verifying the add customer Scenario.\"\"\")\n    @allure.story('epic_1')\n    @allure.title(\"Adding New Customer into the Porta\")\n    @allure.step\n    def test_addcust(self, getData):\n        wait = WebDriverWait(self.driver, 50)\n        log = self.getLogger()\n        actions = Actions(self.driver)\n        homePage = HomePage(self.driver)\n        #time.sleep(50)\n        wait.until(EC.visibility_of_element_located(homePage.myservices))\n        servicePage = homePage.getServicesIcon()\n        time.sleep(20)\n        actions.click(servicePage.servicesPagedropdown())\n        log.info(\"Clicked on Service Page DropDown\")\n        actions.click(servicePage.selectaccount())\n        log.info(\"Selected Account\")\n        time.sleep(20)\n>       wait.until(EC.visibility_of_element_located(servicePage.voicecommone()))\n\ntests\\test_addcustomer.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:71: in until\n    value = method(self._driver)\nvenv\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:128: in __call__\n    return _element_if_visible(_find_element(driver, self.locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8c3470d5a820d484678a324a8438dc28\")>\nby = <selenium.webdriver.remote.webelement.WebElement (session=\"8c3470d5a820d484678a324a8438dc28\", element=\"cf1c6a09-91d0-4ee4-a261-c81c93e4ce28\")>\n\n    def _find_element(driver, by):\n        \"\"\"Looks up an element. Logs and re-raises ``WebDriverException``\n        if thrown.\"\"\"\n        try:\n>           return driver.find_element(*by)\nE           TypeError: selenium.webdriver.remote.webdriver.WebDriver.find_element() argument after * must be an iterable, not WebElement\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:411: TypeError"}, "description": "Verifying the add customer Scenario.", "steps": [{"name": "test_addcust", "status": "broken", "statusDetails": {"message": "TypeError: selenium.webdriver.remote.webdriver.WebDriver.find_element() argument after * must be an iterable, not WebElement\n", "trace": "  File \"C:\\Selenium\\Selenium-Python-Framework\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Selenium\\Selenium-Python-Framework\\tests\\test_addcustomer.py\", line 32, in test_addcust\n    wait.until(EC.visibility_of_element_located(servicePage.voicecommone()))\n  File \"C:\\Selenium\\Selenium-Python-Framework\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 71, in until\n    value = method(self._driver)\n  File \"C:\\Selenium\\Selenium-Python-Framework\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 128, in __call__\n    return _element_if_visible(_find_element(driver, self.locator))\n  File \"C:\\Selenium\\Selenium-Python-Framework\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 411, in _find_element\n    return driver.find_element(*by)\n"}, "parameters": [{"name": "getData", "value": "{'Company Name': 'Auto_Client_0231', 'UpdatedCompanyName': None, 'Credit Limit': 10, 'Contact Name': 'Test', 'Contact Number': '27623006666', 'Contact Email': 'test@gmail.com'}"}], "start": 1639669238656, "stop": 1639669284926}], "attachments": [{"name": "Screenshot", "source": "98b9f475-e273-49de-ace9-f2e779b19fab-attachment.png", "type": "image/png"}, {"name": "log", "source": "46aa004d-415a-4577-8210-80f1034e406b-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "eb71ff3e-3925-476e-8da4-197e16eb10de-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "getData", "value": "{'Company Name': 'Auto_Client_0231', 'UpdatedCompanyName': None, 'Credit Limit': 10, 'Contact Name': 'Test', 'Contact Number': '27623006666', 'Contact Email': 'test@gmail.com'}"}], "start": 1639669238656, "stop": 1639669284929, "uuid": "5782eaf5-9d13-4e44-8059-fbbac062d3c8", "historyId": "33a05123a6aaf28487040ee2da07dc3b", "testCaseId": "7ad8bb180455c3005ef413273448f05b", "fullName": "tests.test_addcustomer.Test_AddCustomer#test_addcust", "labels": [{"name": "severity", "value": "critical"}, {"name": "story", "value": "epic_1"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_addcustomer"}, {"name": "subSuite", "value": "Test_AddCustomer"}, {"name": "host", "value": "ARVINDNAGPURE"}, {"name": "thread", "value": "4608-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_addcustomer"}]}